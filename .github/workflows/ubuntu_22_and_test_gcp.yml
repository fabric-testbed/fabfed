name: GCP-Ubuntu22.04 Test 

on:
  push:
    branches:
      - knit8 
  workflow_dispatch:

env:
  FABRIC_TOKEN: ${{ secrets.FABRIC_TOKEN }}
  FABRIC_BASTION_KEY: ${{ secrets.FABRIC_BASTION_KEY }}
  FABRIC_SLIVER_KEY: ${{ secrets.FABRIC_SLIVER_KEY }}
  FABRIC_SLIVER_PUBKEY: ${{ secrets.FABRIC_SLIVER_PUBKEY }}
  FABRIC_PROJECT: ${{ secrets.FABRIC_PROJECT }}
  FABRIC_USER: ${{ secrets.FABRIC_USER }}

  RUN_GCP: ${{ vars.RUN_GCP }}

jobs:
  GcpOnUbuntuTest:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Print Versions 
        run: |
          python3 --version
          pip --version
          pwd
          whoami
          echo ${{ github.workspace }}
          echo $HOME

      - name: Install Fabfed And Requirements 
        run: |
          pip install --upgrade pip 
          pip install setuptools --upgrade
          pip install --no-cache-dir --ignore-requires-python neo4j==5.18.0
          pip list -v | grep neo4j
          pip install --no-cache-dir --ignore-requires-python -r requirements.txt
          python3 -m pip install --no-cache-dir .

      - name: Run Unit Tests
        run: |
          pytest tests

      - name: Test Stitch Policy
        run: |
          fabfed stitch-policy -providers "gcp,fabric"

      - name: Show Sessions 
        run: |
          fabfed sessions -show 
          fabfed sessions -show -json

      - name: Save Credentials
        run: |
          mkdir -p ${{ github.workspace }}/creds
          echo ${{ env.FABRIC_TOKEN }} | base64 --decode > ${{ github.workspace }}/creds/token.json
          echo ${{ env.FABRIC_BASTION_KEY }} | base64 --decode > ${{ github.workspace }}/creds/bastion
          echo ${{ env.FABRIC_SLIVER_KEY }} | base64 --decode > ${{ github.workspace }}/creds/sliver
          echo ${{ env.FABRIC_SLIVER_PUBKEY }} | base64 --decode > ${{ github.workspace }}/creds/sliver.pub
          echo ${{ env.GCP_SERVICE_KEY_PATH }} | base64 --decode > ${{ github.workspace }}/creds/gcp.json

      - name: Test GCP
        if: ${{ env.RUN_GCP == 'true' }}
        run: |
          session=cicd-gcp
          ${{ github.workspace }}/cicd/run-fabfed.sh cicd/test_configs/gcp $session
