name: Ubuntu22.04 Test 

on:
  push:
    branches:
      - develop 
  pull_request:
    branches:
      - develop
  workflow_dispatch:

env:
  fabfed_image: fabfed:cicd
  FABRIC_TOKEN: ${{ secrets.FABRIC_TOKEN }}
  FABRIC_BASTION_KEY: ${{ secrets.FABRIC_BASTION_KEY }}
  FABRIC_SLIVER_KEY: ${{ secrets.FABRIC_SLIVER_KEY }}
  FABRIC_SLIVER_PUBKEY: ${{ secrets.FABRIC_SLIVER_PUBKEY }}
  FABRIC_PROJECT: ${{ secrets.FABRIC_PROJECT }}
  FABRIC_USER: ${{ secrets.FABRIC_USER }}

jobs:
  UbuntuTest:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Print Versions 
        run: |
          python3 --version
          pip --version
          pwd
          whoami
          echo ${{ github.workspace }}
          echo $HOME

      - name: Install Fabfed And Requirements 
        run: |
          pip install --upgrade pip 
          pip install setuptools --upgrade
          pip install --no-cache-dir --ignore-requires-python neo4j==5.18.0
          pip list -v | grep neo4j
          pip install --no-cache-dir --ignore-requires-python -r requirements.txt
          python3 -m pip install --no-cache-dir .

      - name: Run Unit Tests
        run: |
          pytest tests

      - name: Test Stitch Policy
        run: |
          fabfed stitch-policy -providers "chi,fabric"

      - name: Show Sessions 
        run: |
          fabfed sessions -show 
          fabfed sessions -show -json

      - name: Save Credentials
        run: |
          mkdir -p ${{ github.workspace }}/creds
          echo ${{ env.FABRIC_TOKEN }} | base64 --decode > ${{ github.workspace }}/creds/token.json
          echo ${{ env.FABRIC_BASTION_KEY }} | base64 --decode > ${{ github.workspace }}/creds/bastion
          echo ${{ env.FABRIC_SLIVER_KEY }} | base64 --decode > ${{ github.workspace }}/creds/sliver
          echo ${{ env.FABRIC_SLIVER_PUBKEY }} | base64 --decode > ${{ github.workspace }}/creds/sliver.pub

      - name: Test Fabric FacilityPort
        run: |
          session=fabric-facility-port
          echo "vlan: 3102" > $session-varfile.yml
          ${{ github.workspace }}/cicd/run-fabfed.sh cicd/test_configs/fabric_facility_port $session $session-varfile.yml

      - name: Test L2VPN with nodes.
        run: |
          ${{ github.workspace }}/cicd/run-fabfed.sh cicd/test_configs/fabric_l2_vpn fabric-l2-vpn
