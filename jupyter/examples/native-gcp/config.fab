variable:
  - vpc:
      default: 'vpc-69acc1d9-8c24-47cd-90b8-33be57167dbf' # specifies the vpc
  - vpc_subnet:
      default: '10.100.0.0/24' # specify the vpc subnet
  - site:
      default: PSC
  - node_count:
      default: 1
provider:
  - gcp:
      - gcp_provider:
          credential_file: ~/.fabfed/fabfed_credentials.yml
          profile: gcp
  - fabric:
      - fabric_provider:
          credential_file: ~/.fabfed/fabfed_credentials.yml
          profile: fabric
config:
  - layer3:
      - fab_layer:
          subnet: 192.168.10.0/24
      - gcp_layer:
          subnet: '{{ var.vpc_subnet }}'
  - peering:
      - my_peering:
          # This configuration overrides the default facility and has beed tested sucessfully with vpc-69acc1d9-8c24-47cd-90b8-33be57167dbf 
          # Fabric node should be able to ping the gcp vm with ip 10.100.0.2
          # To override the default facility. Be sure to specify local_device, local_port, and cloud_region 
          # Example:
          # local_device: 'agg3.ashb'
          # local_port: 'Bundle-Ether5'
          # cloud_region: 'us-east4'

          # Uncomment and select a specific vlan. Not really necessary. Fablib should pick an unused vlan. 
          # cloud_vlan:

          # Must provide a vpc
          cloud_vpc: '{{ var.vpc }}'
          # cloud_bw: 50
          remote_asn: 16550 # google_asn
          local_address: 192.168.1.1/30  # customer_ip
          remote_address: 192.168.1.2/30 # google_ip
resource:
  - network:
      - net:
          provider: '{{ gcp.gcp_provider }}'
          layer3: '{{ layer3.gcp_layer }}'
          peering: '{{ peering.my_peering }}'
          stitch_with:
            - network: '{{ network.fabric_network }}'
      - fabric_network:
          provider: '{{ fabric.fabric_provider }}'
          layer3: '{{ layer3.fab_layer }}'
          peering: '{{ peering.my_peering }}'
  - node:
      - fabric_node:
          provider: '{{ fabric.fabric_provider }}'
          network: '{{ network.fabric_network }}'
          site: '{{ var.site }}'
          count: '{{ var.node_count }}'
