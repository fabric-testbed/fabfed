@startuml

title Mobius - Class Diagram


class MobiusController {
  +private HashMap<String, Workflow> workflowHashMap
  +public static MobiusController getInstance()
  +public String createWorkflowID() throws Exception
  +public void deleteWorkflow(Workflow workflow)
  +public void deleteWorkflow(String workflowId) throws Exception
  +public String getWorkflowStatus(String workflowId) throws Exception
  +public void processComputeRequest(String workflowId, ComputeRequest request) throws Exception
  +public void processNetworkRequest() throws Exception
  +public void processStorageRequest(String workflowId, StorageRequest request) throws Exception
  +public void doPeriodic()
  +public static void startThreads()
}

class WorkflowOperationLock extends Semaphore {
  +private static final long serialVersionUID
}

class Workflow {
  +private String workflowID
  +protected WorkflowOperationLock lock
  +private HashMap<String, CloudContext> siteToContextHashMap
  +private int nodeCount
  +private FutureRequests futureRequests
  +public String getWorkflowID()
  +public void stop() throws Exception
  +public String status() throws Exception
  +public void lock() throws InterruptedException
  +public void unlock()
  +public boolean locked()
  +public void processComputeRequest(ComputeRequest request) throws Exception
  +public void doPeriodic()
  +public void processStorageRequest(StorageRequest request) throws Exception
  +public void processFutureComputeRequests()
  +public void processFutureStorageRequests()
}

class PeriodicProcessingThread implements Runnable {
  + protected static Lock syncLock
  + protected static int waitTimeInt
  + protected static int periodTimeInt
  + public void run()
  + public static void getLock()
  + public static boolean tryLock(int sec)
  + public static void releaseLock()
  + private static int getPropertyOrDefault(String pName, int defaultVal)
  + public static int getWaitTime()
  + public static int getPeriod()
}

class FutureRequests {
  + private List<ComputeRequest> futureComputeRequests
  + private List<NetworkRequest> futureNetworkRequests
  + private List<StorageRequest> futureStorageRequests
}

class CloudContext {
  + protected CloudType type
  + protected String site
  + protected Set<String> hostNameSet
  + public String getSite()
  + public CloudType getCloudType()
  + abstract public int processCompute(String workflowId, ComputeRequest request, int nameIndex) throws Exception
  + abstract public String getStatus() throws Exception
  + abstract public void stop() throws Exception
  + abstract public String doPeriodic()
  + public boolean containsHost(String hostname)
  + abstract public void processStorageRequest(StorageRequest request) throws Exception
}

class ComputeRequest
class NetworkRequest
class StorageRequest

MobiusController "1" *-up- "many" Workflow: Composition
FutureRequests "1" *-up- "many" ComputeRequest: Composition
FutureRequests "1" *-up- "many" NetworkRequest: Composition
FutureRequests "1" *-up- "many" StorageRequest: Composition
Workflow "1" *-up- "many" CloudContext: Composition
Workflow "1" *-up- "1" FutureRequests: Composition

@enduml

