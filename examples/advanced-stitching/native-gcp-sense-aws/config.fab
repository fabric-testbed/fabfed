variable:
  - aws_subnet:
      default: "10.140.0.0/24"
  - gcp_vpc:
      default: "vpc-69acc1d9-8c24-47cd-90b8-33be57167dbf" # specifies the vpc
  - gcp_subnet:
      default: "10.100.0.0/24"                            # specify the vpc subnet
  - node_count:
      default: 1
  - site:
      default: KANS
provider:
   - gcp:
      - gcp_provider:
          credential_file: ~/.fabfed/fabfed_credentials.yml
          profile: gcp 
   - sense:
      - aws_provider:
          credential_file: ~/.fabfed/fabfed_credentials.yml
          profile: sense
   - fabric:
      - fabric_provider:
          credential_file: ~/.fabfed/fabfed_credentials.yml
          profile: fabric
config:
  - layer3:
      - gcp_layer:
          subnet: '{{ var.gcp_subnet }}' 
      - aws_layer:
          subnet: '{{ var.aws_subnet }}' 
      - fab_layer:
          subnet: 192.168.10.0/24
  - peering:
      - gcp_peering:
          cloud_vpc: '{{ var.gcp_vpc }}'     # Nodes should be able to ping the existing gcp vm with ip 10.100.0.2
          # cloud_vlan:
          # cloud_bw: 50
          local_asn: "55038"
          local_address: "192.168.1.1/30"
          remote_asn: "16550"
          remote_address: "192.168.1.2/30"
      - aws_peering:
          cloud_account: "296256999979"
          # cloud_vlan:
          # cloud_bw: 50
          local_asn: "55038"
          local_address: "192.168.1.1/30"
          remote_asn: "64512"              # amazon_asn
          remote_address: "192.168.1.2/30" # amazon_ip
resource:
  - network:
      - gcp_net:
          provider: '{{ gcp.gcp_provider }}'
          layer3: "{{ layer3.gcp_layer }}"
          peering: "{{ peering.gcp_peering }}"
      - aws_net:
          provider: '{{ sense.aws_provider }}'
          layer3: "{{ layer3.aws_layer }}"
          peering: "{{ peering.aws_peering }}"
      - fabric_network:
          provider: '{{ fabric.fabric_provider }}'
          layer3: "{{ layer3.fab_layer }}"
          peering: [ "{{ peering.gcp_peering }}", "{{ peering.aws_peering }}" ]
          stitch_with:
          - network: '{{ network.gcp_net }}'
          - network: '{{ network.aws_net }}'
  - node:
      - aws_node:
          provider: '{{ sense.aws_provider }}'
          network: "{{ network.aws_net }}"
      - fabric_node:
          provider: '{{ fabric.fabric_provider }}'
          network: '{{ network.fabric_network }}'
          site: '{{ var.site }}'
